package study;

import java.io.*;
import java.awt.*;
import java.util.ArrayList;
import javax.swing.*;
import java.net.*;

public class engSpell extends JFrame{
	
	ArrayList<String> wordList = new ArrayList<String>();
	JTextArea ta = new JTextArea();
	
	public engSpell() {
		readWordList();
		
		Container c = getContentPane();
		c.setLayout(new FlowLayout());
		c.add(ta);
		ta.setEnabled(false);
		ta.setDisabledTextColor(Color.black);
		
		setTitle("영어 스펠 체크 서버");
		setVisible(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setSize(300,300);
		try {
			ServerSocket ss = new ServerSocket(9999);
			
			while(true) {
				Socket socket = ss.accept();
				ta.append("클라이언트 연결됨"+"\n");
				Multiple mul = new Multiple(socket);
				mul.start();
			}
		}
		catch(Exception e) {
			System.out.println(e.getMessage());
		}
	}
	public void readWordList() {
		File f = new File("words.txt");
		try {
			BufferedReader br = new BufferedReader(new FileReader(f));
			while(true) {
				String word = br.readLine();
				if(word==null)
					break;
				wordList.add(word);
			}
		}
		catch(Exception e) {
			System.out.println(e.getMessage());
		}
	}
	class Multiple extends Thread {
		Socket socket;
		public Multiple(Socket socket) {
			this.socket=socket;
		}
		public void run() {
			try {
				BufferedReader br = new BufferedReader(new InputStreamReader(socket.getInputStream()));
				BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream()));
				while(true) {
					String rw = br.readLine();
					if(rw==null)
						break;
					if(wordList.indexOf(rw)>=0) {
						ta.append(rw+"=Yes"+"\n");
						bw.write("Yes"+"\n");
						bw.flush();
					}
					else {
						ta.append(rw+"=No"+"\n");
						bw.write("No"+"\n");
						bw.flush();
					}
				}
			}
			catch (Exception e) {
				System.out.println(e.getMessage());
			}
		}
	}
	public static void main(String[] args) {
		new engSpell();
	}

}
